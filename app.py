import streamlit as st
import google.generativeai as genai

# Set your API key here
genai.configure(api_key="AIzaSyC4nD33wVtoclwz0JDSvRGmQeCg-aHq6xc")

st.title("Model Selector and Text Generator")

# Fetch available models
try:
    all_models = list(genai.list_models())
except Exception as e:
    st.error(f"Failed to fetch models: {e}")
    st.stop()

# Get model names for dropdown
model_names = [model.display_name for model in all_models]

# Select model
selected_name = st.selectbox("Choose a model:", model_names)

# Find the selected model object
try:
    selected_model = next(m for m in all_models if m.display_name == selected_name)
except StopIteration:
    st.error("Selected model not found.")
    st.stop()

st.write(f"Selected Model ID: {selected_model.name}")

# Instantiate generative model
model = genai.GenerativeModel(selected_model.name)

# Prompt input
user_prompt = st.text_area("Enter your prompt:")

if st.button("Check Idea"):
    if not user_prompt.strip():
        st.warning("Please enter a prompt.")
    else:
        with st.spinner("Validatinggg..."):
            try:
                # Generate content using model
                response = model.generate_content(user_prompt)
                
                if response.candidates:
                    # Extract generated text from first candidate
                    generated_text = response.candidates[0].content.parts[0].text
                    st.subheader("Generated Text:")
                    st.write(generated_text)
                else:
                    st.warning("No text was generated by the model.")
                    if response.prompt_feedback and response.prompt_feedback.block_reason:
                        st.error(f"Generation was blocked due to: {response.prompt_feedback.block_reason.name}")

            except Exception as e:
                st.error(f"An error occurred: {e}")
